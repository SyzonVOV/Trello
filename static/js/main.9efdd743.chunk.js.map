{"version":3,"sources":["assets/images/pencil.svg","assets/images/trash.svg","styles.ts","utils/arrayUtils.ts","state/appStateReducer.ts","utils/moveItem.ts","withInitialState.tsx","state/AppStateContext.tsx","api.ts","utils/isHidden.ts","state/actions.ts","utils/useItemDrag.ts","components/Card/Card.tsx","components/NewItemForm/NewItemForm.tsx","utils/useFocus.ts","components/AddNewItem/AddNewItem.tsx","components/Column/Column.tsx","CustomDragLayer.tsx","App.tsx","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgPencil","_ref","svgRef","title","titleId","props","xmlns","viewBox","enableBackground","ref","id","ForwardRef","x","y","width","height","points","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","SvgTrash","xmlSpace","DragPreviewContainer","styled","div","isPreview","undefined","isHidden","AppContainer","ColumnContainer","ColumnTitle","CardContainer","AddItemButton","button","dark","NewItemFormContainer","NewItemButton","NewItemInput","input","CustomDragLayerContainer","DragPreviewWrapper","attrs","position","style","transform","rotate360","keyframes","FlexContainer","Spinner","StyledSVGPencil","Pencil","StyledSVGTrash","Trash","findItemIndexById","items","findIndex","item","appStateReducer","draft","action","type","lists","push","uuidv4","text","payload","tasks","listId","targetListIndex","draggedId","hoverId","dragIndex","hoverIndex","array","from","to","startIndex","splice","moveItem","draggedItemId","hoveredItemId","sourceColumnId","targetColumnId","sourceListIndex","draggedItem","appData","WrappedComponent","AppStateContext","createContext","AppStateProvider","children","initialState","useImmerReducer","state","dispatch","useEffect","fetch","process","method","headers","Accept","body","JSON","stringify","then","response","ok","json","Error","catch","error","console","log","Provider","value","getTasksByListId","find","list","useState","setInitialState","isLoading","setIsLoading","a","data","fetchInitialState","message","useAppState","useContext","itemType","Boolean","setDraggedItem","moveTask","useItemDrag","useDrag","end","drag","preview","getEmptyImage","captureDraggingState","Card","columnId","show","setShow","useRef","useDrop","accept","hover","throttle","drop","handleShowEdit","prev","onPointerEnter","onPointerLeave","NewItemForm","onAdd","setText","inputRef","useLayoutEffect","current","focus","useFocus","onChange","e","onKeyPress","ev","onClick","AddNewItem","showForm","setShowForm","toggleButtonText","Column","map","task","addTask","CustomDragLayer","currentOffset","useDragLayer","monitor","getSourceClientOffset","App","addList","ReactDOM","render","StrictMode","DndProvider","backend","Backend","document","getElementById"],"mappings":"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","file":"static/js/main.9efdd743.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\"\n})));\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    enableBackground: \"new 0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.b9e0e1b2.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  x: 125.865,\n  y: 0,\n  width: 127.297,\n  height: 24.745\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 64.209,\n  y: 117.231,\n  width: 250.609,\n  height: 261.796\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"356.586,105.297 326.752,105.297 52.276,105.297 22.441,105.297 22.441,36.678 113.931,36.678 265.096,36.678 356.586,36.678 \"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgTrash(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 379.027 379.027\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrash);\nexport default __webpack_public_path__ + \"static/media/trash.3d52ecc0.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { keyframes } from 'styled-components'\r\nimport {ReactComponent as Pencil} from './assets/images/pencil.svg';\r\nimport {ReactComponent as Trash} from './assets/images/trash.svg';\r\n\r\ninterface AddItemButtonProps {\r\n  dark?: boolean\r\n}\r\n\r\ninterface DragPreviewContainerProps {\r\n  isHidden?: boolean\r\n  isPreview?: boolean\r\n}\r\n\r\ntype DragPreviewWrapperProps = {\r\n  position: {\r\n    x: number\r\n    y: number\r\n  }\r\n}\r\n\r\nexport const DragPreviewContainer = styled.div<DragPreviewContainerProps>`\r\n  transform: ${ (props) =>\r\n          props.isPreview ? 'rotate(5deg)' : undefined };\r\n  opacity: ${ props => (props.isHidden ? 0 : 1) };\r\n`\r\n\r\nexport const AppContainer = styled.div`\r\n  align-items: flex-start;\r\n  background-color: #3179ba;\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  padding: 20px;\r\n  width: 100%;\r\n`\r\n\r\nexport const ColumnContainer = styled( DragPreviewContainer )`\r\n  background-color: #ebecf0;\r\n  width: 300px;\r\n  min-height: 40px;\r\n  margin-right: 20px;\r\n  border-radius: 3px;\r\n  padding: 8px 8px;\r\n  flex-grow: 0;\r\n`\r\n\r\nexport const ColumnTitle = styled.div`\r\n  padding: 6px 16px 12px;\r\n  font-weight: bold;\r\n`\r\n\r\nexport const CardContainer = styled( DragPreviewContainer )`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  max-width: 300px;\r\n  border-radius: 3px;\r\n  box-shadow: #091e4240 0 1px 0 0;\r\n`\r\n\r\nexport const AddItemButton = styled.button<AddItemButtonProps>`\r\n  background-color: #ffffff3d;\r\n  border-radius: 3px;\r\n  border: none;\r\n  color: ${ props => (props.dark ? '#000' : '#fff') };\r\n  cursor: pointer;\r\n  max-width: 300px;\r\n  padding: 10px 12px;\r\n  text-align: left;\r\n  transition: background 85ms ease-in;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: #ffffff52;\r\n  }\r\n`\r\n\r\nexport const NewItemFormContainer = styled.div`\r\n  max-width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n`\r\n\r\nexport const NewItemButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 3px;\r\n  border: none;\r\n  box-shadow: none;\r\n  color: #fff;\r\n  padding: 6px 12px;\r\n  text-align: center;\r\n`\r\n\r\nexport const NewItemInput = styled.input`\r\n  border-radius: 3px;\r\n  border: none;\r\n  box-shadow: #091e4240 0 1px 0 0;\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  width: 100%;\r\n`\r\n\r\nexport const CustomDragLayerContainer = styled.div`\r\n  height: 100%;\r\n  left: 0;\r\n  pointer-events: none;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 100;\r\n`\r\n\r\nexport const DragPreviewWrapper = styled.div.attrs<DragPreviewWrapperProps>(\r\n  ({ position: { x, y } }) => ({\r\n    style: {\r\n      transform: `translate(${ x }px, ${ y }px)`,\r\n    },\r\n  }),\r\n)<DragPreviewWrapperProps>``\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n  \r\n  width: 100vw;\r\n  height: 100vh;\r\n  \r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nexport const Spinner = styled.div`\r\n  animation: ${ rotate360 } 1s linear infinite;\r\n  transform: translateZ(0);\r\n\r\n  border-top: 2px solid hsl(190deg 70% 80%);;\r\n  border-right: 2px solid hsl(190deg 70% 80%);;\r\n  border-bottom: 2px solid hsl(190deg 70% 80%);\r\n  border-left: 4px solid hsl(190deg 60% 40%);\r\n  background: transparent;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n// todo: create buttons instead of SVG for semantic reasons\r\nexport const StyledSVGPencil = styled(Pencil)`\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: #8c8c8c;\r\n\r\n  &:hover {\r\n    fill: #333333;\r\n  }\r\n`;\r\n\r\nexport const StyledSVGTrash = styled(Trash)`\r\n  margin-left: 0.2em;\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: #b33636;\r\n  &:hover {\r\n    fill: darkred;\r\n  }\r\n`;","type Item = {\r\n  id: string\r\n}\r\n\r\nexport const findItemIndexById = <TItem extends Item>(\r\n  items: TItem[],\r\n  id: string,\r\n) => {\r\n  return items.findIndex( (item: TItem) => item.id === id )\r\n}\r\n\r\nexport function removeItemAtIndex<TItem>(\r\n  array: TItem[],\r\n  index: number,\r\n){\r\n  return [ ...array.slice( 0, index ), ...array.slice( index + 1 ) ]\r\n}\r\n\r\nexport function insertItemAtIndex<TItem>(\r\n  array: TItem[],\r\n  item: TItem,\r\n  index: number,\r\n){\r\n  return [ ...array.slice( 0, index ), item, ...array.slice( index ) ]\r\n}\r\n\r\nexport const moveItem = <TItem>(\r\n  array: TItem[],\r\n  from: number,\r\n  to: number,\r\n) => {\r\n  const item = array[from]\r\n  return insertItemAtIndex( removeItemAtIndex( array, from ), item, to )\r\n}","import { Action } from './actions'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { moveItem } from '../utils/moveItem';\r\nimport { findItemIndexById } from '../utils/arrayUtils';\r\nimport { DragItem } from '../DragItem';\r\n\r\nexport interface Task {\r\n  id: string\r\n  text: string\r\n}\r\n\r\nexport interface List {\r\n  id: string\r\n  text: string\r\n  tasks: Task[]\r\n}\r\n\r\nexport interface AppState {\r\n  lists: List[]\r\n  draggedItem: DragItem | null\r\n}\r\n\r\n\r\n// Here we call the state a draft, because we are using Immer and we’ll mutate this\r\n// object directly. This way we remind ourselves that it is not a regular reducer state\r\n// and we don’t have to worry about the immutability.\r\nexport const appStateReducer = (draft: AppState, action: Action): AppState | void => {\r\n  switch (action.type) {\r\n    case 'ADD_LIST': {\r\n      draft.lists.push( { id: uuidv4(), text: action.payload, tasks: [] } )\r\n      break\r\n    }\r\n    case 'ADD_TASK': {\r\n      const { text, listId } = action.payload\r\n      const targetListIndex = findItemIndexById( draft.lists, listId )\r\n\r\n      draft.lists[targetListIndex].tasks.push( {\r\n        id: uuidv4(),\r\n        text,\r\n      } )\r\n      break\r\n    }\r\n    case 'MOVE_LIST': {\r\n      const { draggedId, hoverId } = action.payload\r\n      const dragIndex = findItemIndexById( draft.lists, draggedId )\r\n      const hoverIndex = findItemIndexById( draft.lists, hoverId )\r\n      draft.lists = moveItem( draft.lists, dragIndex, hoverIndex )\r\n      break\r\n    }\r\n    case 'MOVE_TASK': {\r\n      const {\r\n        draggedItemId,\r\n        hoveredItemId,\r\n        sourceColumnId,\r\n        targetColumnId,\r\n      } = action.payload;\r\n\r\n      const sourceListIndex = findItemIndexById(\r\n        draft.lists,\r\n        sourceColumnId,\r\n      );\r\n\r\n      const targetListIndex = findItemIndexById(\r\n        draft.lists,\r\n        targetColumnId,\r\n      );\r\n\r\n      const dragIndex = findItemIndexById(\r\n        draft.lists[sourceListIndex].tasks,\r\n        draggedItemId,\r\n      )\r\n      // ...\r\n      const hoverIndex = hoveredItemId\r\n        ? findItemIndexById(\r\n          draft.lists[targetListIndex].tasks,\r\n          hoveredItemId,\r\n        )\r\n        : 0\r\n\r\n      const item = draft.lists[sourceListIndex].tasks[dragIndex]\r\n\r\n      // Remove the task from the source list\r\n      draft.lists[sourceListIndex].tasks.splice( dragIndex, 1 )\r\n\r\n      // Add the task to the target list\r\n      draft.lists[targetListIndex].tasks.splice( hoverIndex, 0, item )\r\n\r\n      break\r\n    }\r\n    case 'SET_DRAGGED_ITEM': {\r\n      draft.draggedItem = action.payload\r\n      break\r\n    }\r\n    // default: {\r\n    //   return draft\r\n    // }\r\n  }\r\n}\r\n","//Building Trello with Drag and Drop 77\r\n//We want to be able to work with arrays with any kind of items in them, so we use a\r\n//generic type T.\r\n//Then we calculate the startIndex. We make sure that it�s always a positive number.\r\n//If our destination index is smaller than zero - we use array length plus the destination\r\n//index. We do this because if you pass a negative index to splice function it will begin\r\n//that many elements from the end. So we can end up adding an item to the wrong\r\n//spot.\r\n//After we�ve calculated the startIndex that is always a positive number we can move\r\n//items around. First, we remove the item with the from index and store it in the item\r\n//const. Then we insert that item at startIndex position.\r\n\r\nexport const moveItem = <T>(array: T[], from: number, to: number) => {\r\n  const startIndex = to < 0 ? array.length + to : to;\r\n  const item = array.splice( from, 1 )[0]\r\n  array.splice( startIndex, 0, item )\r\n  return array\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { AppState } from './state/appStateReducer'\r\nimport { load } from './api';\r\nimport { FlexContainer, Spinner } from './styles';\r\n\r\ntype InjectedProps = {\r\n  initialState: AppState\r\n}\r\n\r\ntype PropsWithoutInjected<TBaseProps> = Omit<TBaseProps,\r\n  keyof InjectedProps>\r\n\r\nconst appData: AppState = {\r\n  lists: [\r\n    {\r\n      id: '0',\r\n      text: 'To Do',\r\n      tasks: [ { id: 'c0', text: 'Generate app scaffold' } ],\r\n    },\r\n    {\r\n      id: '1',\r\n      text: 'In Progress',\r\n      tasks: [ { id: 'c2', text: 'Learn Typescript' } ],\r\n    },\r\n    {\r\n      id: '2',\r\n      text: 'Done',\r\n      tasks: [ { id: 'c3', text: 'Begin to use static typing' } ],\r\n    },\r\n  ],\r\n  draggedItem: null,\r\n}\r\n\r\n//We removed the injected props, and then added them back. This might look tautological,\r\n// but it is necessary to let TypeScript know that the wrapped component will accept the\r\n// InjectedProps. TypeScript is very cautious with generic types and if we wouldn't\r\n// perform this trick it wouldn't let us pass the fields defined in the InjectedProps type\r\n// to our component.\r\n\r\nexport function withInitialState<TProps>(\r\n  WrappedComponent: React.ComponentType<PropsWithoutInjected<TProps> & InjectedProps>,\r\n){\r\n  return (props: PropsWithoutInjected<TProps>) => {\r\n    const [ initialState, setInitialState ] = useState<AppState>( {\r\n      lists: [],\r\n      draggedItem: null,\r\n    } )\r\n\r\n    const [ isLoading, setIsLoading ] = useState( true )\r\n    const [ error, setError ] = useState<Error | undefined>()\r\n\r\n    useEffect( () => {\r\n      const fetchInitialState = async () => {\r\n        try {\r\n          const data = await load()\r\n          setInitialState( data )\r\n        } catch (e) {\r\n          setInitialState( appData )\r\n          /*if ( e instanceof Error ) {\r\n            setError( e )\r\n          }*/\r\n        }\r\n        setIsLoading( false )\r\n      }\r\n      fetchInitialState()\r\n    }, [] )\r\n\r\n    if ( isLoading ) {\r\n      return <FlexContainer><Spinner/></FlexContainer>\r\n    }\r\n\r\n    if ( error ) {\r\n      return <div>{ error.message }</div>\r\n    }\r\n\r\n    return <WrappedComponent { ...props } initialState={ initialState }/>\r\n  }\r\n}","import React, { createContext, useContext, useEffect } from 'react'\r\nimport { useImmerReducer } from 'use-immer'\r\nimport { Action } from './actions';\r\nimport { AppState, appStateReducer, List, Task } from './appStateReducer';\r\nimport { DragItem } from '../DragItem';\r\nimport { save } from '../api';\r\nimport { withInitialState } from '../withInitialState';\r\n\r\n\r\ntype AppStateContextProps = {\r\n  lists: Array<List>\r\n  draggedItem: DragItem | null\r\n  getTasksByListId(id: string): Array<Task>\r\n  dispatch: React.Dispatch<Action>\r\n}\r\n\r\ntype AppStateProviderProps = {\r\n  children: React.ReactNode\r\n  initialState: AppState\r\n}\r\n\r\n//React wants us to provide the default value for our context. This value will only\r\n//be used if we don't wrap our application into our AppStateProvider. So we can\r\n//omit it. To do it pass an empty object that we'll cast to AppStateContextProps to\r\n//createContext function. Here we use an as operator to make Typescript think that\r\n//our empty object actually has AppStateContextProps type:\r\nconst AppStateContext = createContext<AppStateContextProps>( {} as AppStateContextProps )\r\n\r\n//We use React.propsWithChildren type.\r\n//It requires one generic argument, but we don't want to have any other props\r\n//so we pass an empty object to it.\r\n\r\nexport const AppStateProvider = withInitialState<AppStateProviderProps>(({ children, initialState }) => {\r\n\r\n  const [ state, dispatch ] = useImmerReducer( appStateReducer, initialState )\r\n  const { draggedItem, lists } = state\r\n\r\n  const getTasksByListId = (id: string) => {\r\n    return lists.find( (list) => list.id === id )?.tasks || []\r\n  }\r\n\r\n  useEffect( () => {\r\n    save( state )\r\n  }, [ state ] )\r\n\r\n  return (\r\n    <AppStateContext.Provider value={ { draggedItem, lists, getTasksByListId, dispatch } }>\r\n      { children }\r\n    </AppStateContext.Provider>\r\n  )\r\n})\r\n\r\nexport const useAppState = () => {\r\n  return useContext( AppStateContext )\r\n}","import { AppState } from './state/appStateReducer'\r\n\r\nexport const save = (payload: AppState) => {\r\n  return fetch( `${ process.env.REACT_APP_BACKEND_ENDPOINT }/save`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify( payload ),\r\n  } ).then( (response) => {\r\n    if ( response.ok ) {\r\n      return response.json()\r\n    } else {\r\n      throw new Error( 'Error while saving the state.' )\r\n    }\r\n  } ).catch(error => {\r\n    console.log(error)\r\n  })\r\n}\r\n\r\nexport const load = () => {\r\n  return fetch( `${ process.env.REACT_APP_BACKEND_ENDPOINT }/load` ).then(\r\n    (response) => {\r\n      if ( response.ok ) {\r\n        return response.json() as Promise<AppState>\r\n      } else {\r\n        throw new Error( 'Error while loading the state.' )\r\n      }\r\n    },\r\n  )\r\n}","import { DragItem } from '../DragItem'\r\n\r\nexport const isHidden = (\r\n  draggedItem: DragItem | null,\r\n  itemType: string,\r\n  id: string,\r\n  isPreview?: boolean,\r\n): boolean => {\r\n  return Boolean(\r\n    !isPreview &&\r\n    draggedItem &&\r\n    draggedItem.type === itemType &&\r\n    draggedItem.id === id,\r\n  )\r\n}","import { DragItem } from '../DragItem';\r\n\r\n\r\n//The technique we are using here is called discriminated union.\r\n//Each interface has a type property. This property will be our discriminant. It means\r\n//that Typescript can look at this property and tell what will be the other fields of the\r\n//interface.\r\nexport type Action =\r\n  | {\r\n  type: 'ADD_LIST'\r\n  payload: string\r\n}\r\n  | {\r\n  type: 'ADD_TASK'\r\n  payload: {\r\n    text: string\r\n    listId: string\r\n  }\r\n}\r\n  | {\r\n  type: 'MOVE_LIST'\r\n  payload: {\r\n    draggedId: string\r\n    hoverId: string\r\n  }\r\n}\r\n  | {\r\n  type: 'SET_DRAGGED_ITEM'\r\n  payload: DragItem | null\r\n}\r\n  | {\r\n  type: 'MOVE_TASK'\r\n  payload: {\r\n    draggedItemId: string\r\n    hoveredItemId: string | null\r\n    sourceColumnId: string\r\n    targetColumnId: string\r\n  }\r\n}\r\n\r\n\r\nexport const addTask = (text: string, listId: string): Action => ({\r\n  type: 'ADD_TASK',\r\n  payload: {\r\n    text,\r\n    listId,\r\n  },\r\n})\r\n\r\nexport const addList = (text: string): Action => ({\r\n  type: 'ADD_LIST',\r\n  payload: text,\r\n})\r\n\r\nexport const moveList = (draggedId: string, hoverId: string): Action => ({\r\n  type: 'MOVE_LIST',\r\n  payload: {\r\n    draggedId,\r\n    hoverId,\r\n  },\r\n})\r\n\r\nexport const setDraggedItem = (draggedItem: DragItem | null): Action => ({\r\n  type: 'SET_DRAGGED_ITEM',\r\n  payload: draggedItem,\r\n})\r\n\r\nexport const moveTask = (\r\n  draggedItemId: string,\r\n  hoveredItemId: string | null,\r\n  sourceColumnId: string,\r\n  targetColumnId: string,\r\n): Action => ({\r\n  type: 'MOVE_TASK',\r\n  payload: {\r\n    draggedItemId,\r\n    hoveredItemId,\r\n    sourceColumnId,\r\n    targetColumnId,\r\n  },\r\n})","import { useEffect } from 'react'\r\nimport { useDrag } from 'react-dnd'\r\nimport { getEmptyImage } from 'react-dnd-html5-backend'\r\nimport { useAppState } from '../state/AppStateContext';\r\nimport { DragItem } from '../DragItem';\r\nimport { setDraggedItem } from '../state/actions';\r\n\r\n\r\nexport const useItemDrag = (item: DragItem) => {\r\n  const { dispatch } = useAppState()\r\n  const [ , drag, preview ] = useDrag( {\r\n    type: item.type,\r\n    item: () => {\r\n      dispatch( setDraggedItem( item ) )\r\n      return item\r\n    },\r\n    end: () => dispatch( setDraggedItem( null ) ),\r\n  } )\r\n\r\n  useEffect( () => {\r\n    preview( getEmptyImage(), { captureDraggingState: true } )\r\n  }, [ preview ] )\r\n\r\n  return { drag }\r\n}","import React, { useRef, useState } from 'react'\r\nimport { CardContainer, StyledSVGPencil, StyledSVGTrash } from '../../styles'\r\nimport { ICardProps } from './Card.props';\r\nimport { useAppState } from '../../state/AppStateContext';\r\nimport { isHidden } from '../../utils/isHidden';\r\nimport { useItemDrag } from '../../utils/useItemDrag';\r\nimport { useDrop } from 'react-dnd';\r\nimport { moveTask, setDraggedItem } from '../../state/actions';\r\nimport { throttle } from 'throttle-debounce-ts';\r\n\r\n\r\nexport const Card = ({ text, id, columnId, isPreview }: ICardProps): JSX.Element => {\r\n  const [show, setShow] = useState(false);\r\n  const { draggedItem, dispatch } = useAppState()\r\n  const ref = useRef<HTMLDivElement>( null )\r\n\r\n  const { drag } = useItemDrag( {\r\n    type: 'CARD',\r\n    id,\r\n    text,\r\n    columnId,\r\n  } )\r\n\r\n  const [ , drop ] = useDrop( {\r\n    accept: 'CARD',\r\n    hover: throttle( 200, () => {\r\n      if ( !draggedItem ) {\r\n        return\r\n      }\r\n      if ( draggedItem.type !== 'CARD' ) {\r\n        return\r\n      }\r\n      if ( draggedItem.id === id ) {\r\n        return\r\n      }\r\n\r\n      dispatch(\r\n        moveTask( draggedItem.id, id, draggedItem.columnId, columnId ),\r\n      )\r\n      dispatch( setDraggedItem( { ...draggedItem, columnId } ) )\r\n    } ),\r\n  } )\r\n\r\n  drag(drop(ref))\r\n\r\n  const handleShowEdit = () => {\r\n    setShow( (prev) => !prev);\r\n  }\r\n\r\n  return (\r\n    <CardContainer\r\n      isHidden={ isHidden( draggedItem, 'CARD', id, isPreview ) }\r\n      isPreview={ isPreview }\r\n      ref={ ref }\r\n      onPointerEnter={handleShowEdit}\r\n      onPointerLeave={handleShowEdit}\r\n    >\r\n      { text }\r\n      { show && <div>\r\n        <StyledSVGPencil/>\r\n        <StyledSVGTrash/>\r\n      </div> }\r\n    </CardContainer>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { NewItemButton, NewItemFormContainer, NewItemInput } from '../../styles'\r\nimport { useFocus } from '../../utils/useFocus'\r\nimport { INewItemFormProps } from './NewItemForm.props'\r\n\r\nexport const NewItemForm = ({ onAdd }: INewItemFormProps) => {\r\n  const [ text, setText ] = useState( '' )\r\n  const handleAddText = (ev: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if ( ev.key === 'Enter' ) {\r\n      onAdd( text )\r\n    }\r\n  }\r\n  const inputRef = useFocus()\r\n  return (\r\n    <NewItemFormContainer>\r\n      <NewItemInput\r\n        ref={ inputRef }\r\n        value={ text }\r\n        onChange={ e => setText( e.target.value ) }\r\n        onKeyPress={handleAddText}\r\n      />\r\n      <NewItemButton onClick={ () => onAdd( text ) }>\r\n        Create\r\n      </NewItemButton>\r\n    </NewItemFormContainer>\r\n  )\r\n}\r\n\r\n","import { useLayoutEffect, useRef } from 'react'\r\n\r\nexport const useFocus = () => {\r\n    const ref = useRef<HTMLInputElement>(null)\r\n    useLayoutEffect(() => {\r\n        ref.current?.focus()\r\n    })\r\n    return ref\r\n}","import React, { useState } from 'react'\r\nimport { AddItemButton } from '../../styles'\r\nimport { NewItemForm } from '../NewItemForm/';\r\nimport { IAddNewItemProps } from './AddNewItem.props';\r\n\r\nexport const AddNewItem = (props: IAddNewItemProps): JSX.Element => {\r\n  const [ showForm, setShowForm ] = useState( false );\r\n  const { onAdd, toggleButtonText, dark } = props;\r\n  if ( showForm ) {\r\n    return (\r\n      <NewItemForm\r\n        onAdd={ text => {\r\n          onAdd( text )\r\n          setShowForm( false )\r\n        } }/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AddItemButton\r\n      dark={ dark }\r\n      onClick={ () => setShowForm( true ) }\r\n    >\r\n      { toggleButtonText }\r\n    </AddItemButton>\r\n  )\r\n}","import React, { useRef } from 'react'\r\nimport { useDrop } from 'react-dnd'\r\nimport { throttle } from 'throttle-debounce-ts'\r\n\r\nimport { ColumnContainer, ColumnTitle } from '../../styles'\r\nimport { IColumnProps } from './Column.props';\r\nimport { Card } from '../Card/';\r\nimport { AddNewItem } from '../AddNewItem';\r\n\r\nimport { useAppState } from '../../state/AppStateContext';\r\nimport { addTask, moveList, moveTask, setDraggedItem } from '../../state/actions';\r\nimport { useItemDrag } from '../../utils/useItemDrag';\r\nimport { isHidden } from '../../utils/isHidden';\r\n\r\n\r\nexport const Column = ({ text, id, isPreview }: IColumnProps): JSX.Element => {\r\n  const { draggedItem, getTasksByListId, dispatch } = useAppState()\r\n  const tasks = getTasksByListId( id )\r\n  const ref = useRef<HTMLDivElement>( null )\r\n  const [ , drop ] = useDrop( {\r\n    accept: [ 'COLUMN', 'CARD' ],\r\n    hover: throttle( 200, () => {\r\n      if ( !draggedItem ) return\r\n\r\n      if ( draggedItem.type === 'COLUMN' ) {\r\n        if ( draggedItem.id === id ) return\r\n\r\n        dispatch( moveList( draggedItem.id, id ) )\r\n      } else {\r\n        if ( draggedItem.columnId === id ) {\r\n          return\r\n        }\r\n        if ( tasks.length ) {\r\n          return\r\n        }\r\n\r\n        dispatch( moveTask( draggedItem.id, null, draggedItem.columnId, id ) )\r\n        dispatch( setDraggedItem( { ...draggedItem, columnId: id } ) )\r\n      }\r\n    } ),\r\n  } )\r\n\r\n  const { drag } = useItemDrag( { type: 'COLUMN', id, text } )\r\n\r\n  drag( drop( ref ) )\r\n  return (\r\n    <ColumnContainer\r\n      ref={ ref }\r\n      isPreview={ isPreview }\r\n      isHidden={ isHidden( draggedItem, 'COLUMN', id, isPreview ) }\r\n    >\r\n      <ColumnTitle>{ text }</ColumnTitle>\r\n      { tasks.map( (task) => (\r\n        <Card columnId={ id } text={ task.text } key={ task.id } id={ task.id }/>\r\n      ) ) }\r\n      <AddNewItem\r\n        toggleButtonText=\"+ Add another card\"\r\n        onAdd={ (text) => dispatch( addTask( text, id ) ) }\r\n        dark\r\n      />\r\n    </ColumnContainer>\r\n  )\r\n}","import { useAppState } from './state/AppStateContext';\r\nimport { useDragLayer } from 'react-dnd'\r\nimport { Column } from './components/Column';\r\nimport { Card } from './components/Card';\r\nimport { CustomDragLayerContainer, DragPreviewWrapper } from './styles';\r\n\r\nexport const CustomDragLayer = () => {\r\n  const { draggedItem } = useAppState()\r\n  const { currentOffset } = useDragLayer( (monitor) => ({\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n  }) )\r\n\r\n  return draggedItem && currentOffset ? (\r\n    <CustomDragLayerContainer>\r\n      <DragPreviewWrapper position={ currentOffset }>\r\n        { draggedItem.type === 'COLUMN' ? (\r\n          <Column\r\n            id={ draggedItem.id }\r\n            text={ draggedItem.text }\r\n            isPreview\r\n          />\r\n        ) : (\r\n          <Card\r\n            columnId={ draggedItem.columnId }\r\n            isPreview\r\n            id={ draggedItem.id }\r\n            text={ draggedItem.text }\r\n          />\r\n        ) }\r\n      </DragPreviewWrapper>\r\n    </CustomDragLayerContainer>\r\n  ) : null\r\n}","import React from 'react'\r\nimport { AppContainer } from './styles'\r\nimport { Column } from './components/Column/';\r\nimport { AddNewItem } from './components/AddNewItem/';\r\nimport { useAppState } from './state/AppStateContext';\r\nimport { addList } from \"./state/actions\"\r\nimport { CustomDragLayer } from './CustomDragLayer';\r\n\r\nconst App = () => {\r\n  const { lists , dispatch } = useAppState()\r\n\r\n  return (\r\n    <AppContainer>\r\n      <CustomDragLayer />\r\n      { lists.map( (list) => (\r\n        <Column text={ list.text } key={ list.id } id={ list.id }/>\r\n      ) ) }\r\n      <AddNewItem\r\n        toggleButtonText=\"+ Add another list\"\r\n        onAdd={(text) => dispatch(addList(text))}\r\n      />\r\n    </AppContainer>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { AppStateProvider } from './state/AppStateContext';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DndProvider backend={ Backend }>\r\n      <AppStateProvider>\r\n        <App/>\r\n      </AppStateProvider>\r\n    </DndProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById( 'root' ),\r\n)"],"sourceRoot":""}